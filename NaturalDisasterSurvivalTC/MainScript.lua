--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=v2(v0(v30,16));if v19 then local v93=v5(v83,v19);v19=nil;return v93;else return v83;end end end);local function v20(v31,v32,v33) if v33 then local v84=927 -(214 + 713) ;local v85;while true do if (v84==(0 -0)) then v85=(v31/((1 + 1)^(v32-((861 + 17) -(282 + 132 + 463)))))%((5 -3)^(((v33-(1 -0)) -(v32-(1 + 0))) + (2 -1))) ;return v85-(v85%(1066 -(68 + 997))) ;end end else local v86=((1578 -(892 + 65)) -(555 + 64))^(v32-(932 -(857 + (176 -102)))) ;return (((v31%(v86 + v86))>=v86) and (118 -(32 + 85))) or (568 -(367 + 201)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 -0 ;local v36;local v37;while true do if (v35==((1 + 0) -0)) then return (v37 * (469 -213)) + v36 ;end if (v35==0) then v36,v37=v1(v16,v18,v18 + (352 -((345 -258) + 263)) );v18=v18 + (182 -(67 + 113)) ;v35=1 + 0 ;end end end local function v23() local v38=952 -(802 + 150) ;local v39;local v40;local v41;local v42;while true do if (v38==(0 -0)) then v39,v40,v41,v42=v1(v16,v18,v18 + (5 -2) );v18=v18 + 3 + 1 ;v38=(1 -0) + 0 ;end if (v38==(998 -(915 + 82))) then return (v42 * ((47507146 -(1069 + 118)) -30728743)) + (v41 * 65536) + (v40 * 256) + v39 ;end end end local function v24() local v43=0 -0 ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(6 -3)) then if (v48==(0 + 0)) then if (v47==(0 -0)) then return v49 * (0 + 0) ;else v48=792 -(368 + 423) ;v46=0 -0 ;end elseif (v48==(2065 -(10 + 1 + 7))) then return ((v47==(0 -(0 + 0))) and (v49 * ((443 -(416 + 26))/0))) or (v49 * NaN) ;end return v8(v49,v48-(3266 -2243) ) * (v46 + (v47/((1 + 1)^(91 -(924 -(261 + 624)))))) ;end if (v43==1) then v46=439 -(145 + 293) ;v47=(v20(v45,431 -(44 + 386) ,1506 -(998 + 488) ) * ((1 + (1 -0))^(27 + 5))) + v44 ;v43=1082 -(1020 + 60) ;end if (v43==(774 -(201 + 571))) then v48=v20(v45,(2582 -(630 + 793)) -(116 + 1022) ,128 -97 );v49=((v20(v45,19 + 13 )==1) and  -((9 -6) -2)) or (3 -2) ;v43=(4081 -3219) -(814 + 45) ;end if (v43==0) then v44=v23();v45=v23();v43=2 -1 ;end end end local function v25(v50) local v51;if  not v50 then v50=v23();if (v50==(0 -0)) then return "";end end v51=v3(v16,v18,(v18 + v50) -(1 + 0) );v18=v18 + v50 ;local v52={};for v66=1914 -(1789 + 124) , #v51 do v52[v66]=v2(v1(v3(v51,v66,v66)));end return v6(v52);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return 1700 -(1419 + 281) ;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do if ((2 -0)==v53) then for v94= #":",v23() do local v95=(function() return v21();end)();if (v20(v95, #" ", #"|")~=(74 -(71 + 3))) then else local v104=(function() return 0 + 0 ;end)();local v105=(function() return;end)();local v106=(function() return;end)();local v107=(function() return;end)();local v108=(function() return;end)();while true do if (v104~=(4 -2)) then else while true do if ( #","==v105) then local v117=(function() return 0 -0 ;end)();while true do if (v117==(242 -(187 + 54))) then v105=(function() return 2;end)();break;end if (v117==(780 -(162 + 618))) then v108=(function() return {v22(),v22(),nil,nil};end)();if (v106==0) then local v126=(function() return 0;end)();local v127=(function() return;end)();while true do if (v126==0) then v127=(function() return 0 + 0 ;end)();while true do if (v127~=(0 -0)) then else v108[ #"xnx"]=(function() return v22();end)();v108[ #"?id="]=(function() return v22();end)();break;end end break;end end elseif (v106== #"]") then v108[ #"-19"]=(function() return v23();end)();elseif (v106==2) then v108[ #"nil"]=(function() return v23() -(2^16) ;end)();elseif (v106~= #"91(") then else local v336=(function() return 0;end)();local v337=(function() return;end)();while true do if (v336==0) then v337=(function() return 0;end)();while true do if (0==v337) then v108[ #"xnx"]=(function() return v23() -(2^16) ;end)();v108[ #"0313"]=(function() return v22();end)();break;end end break;end end end v117=(function() return 1;end)();end end end if (v105==(0 -0)) then local v118=(function() return 0 + 0 ;end)();local v119=(function() return;end)();while true do if (0==v118) then v119=(function() return 1636 -(1373 + 263) ;end)();while true do if (v119==(1001 -(451 + 549))) then v105=(function() return  #":";end)();break;end if (v119~=0) then else v106=(function() return v20(v95,2, #"xxx");end)();v107=(function() return v20(v95, #".com",2 + 4 );end)();v119=(function() return 1 -0 ;end)();end end break;end end end if ( #"xnx"==v105) then if (v20(v107, #"nil", #"19(")== #"[") then v108[ #"0836"]=(function() return v59[v108[ #"0836"]];end)();end v54[v94]=(function() return v108;end)();break;end if (v105==(2 -0)) then local v121=(function() return 1384 -(746 + 638) ;end)();local v122=(function() return;end)();while true do if (v121==0) then v122=(function() return 0;end)();while true do if ((0 + 0)==v122) then if (v20(v107, #",", #":")== #"}") then v108[2 -0 ]=(function() return v59[v108[343 -(218 + 123) ]];end)();end if (v20(v107,2,1583 -(1535 + 46) )~= #">") then else v108[ #"asd"]=(function() return v59[v108[ #"xxx"]];end)();end v122=(function() return 1;end)();end if ((1 + 0)~=v122) then else v105=(function() return  #"nil";end)();break;end end break;end end end end break;end if ((1 + 0)==v104) then local v109=(function() return 0;end)();while true do if (v109==1) then v104=(function() return 2;end)();break;end if (v109~=(560 -(306 + 254))) then else v107=(function() return nil;end)();v108=(function() return nil;end)();v109=(function() return 1 + 0 ;end)();end end end if ((0 -0)==v104) then local v110=(function() return 1467 -(899 + 568) ;end)();while true do if (v110==(0 + 0)) then v105=(function() return 0 -0 ;end)();v106=(function() return nil;end)();v110=(function() return 1;end)();end if (v110==1) then v104=(function() return 604 -(268 + 335) ;end)();break;end end end end end end for v96= #"[",v23() do v55[v96-#"~" ]=(function() return v28();end)();end return v57;end if ( #"]"==v53) then local v89=(function() return 0;end)();local v90=(function() return;end)();while true do if (v89~=(290 -(60 + 230))) then else v90=(function() return 0;end)();while true do if (v90==(573 -(426 + 146))) then for v112= #"~",v58 do local v113=(function() return 0 + 0 ;end)();local v114=(function() return;end)();local v115=(function() return;end)();local v116=(function() return;end)();while true do if (v113~=0) then else v114=(function() return 1456 -(282 + 1174) ;end)();v115=(function() return nil;end)();v113=(function() return 1;end)();end if (v113==(812 -(569 + 242))) then v116=(function() return nil;end)();while true do if (v114~=(2 -1)) then else if (v115== #"~") then v116=(function() return v21()~=(0 + 0) ;end)();elseif (v115==2) then v116=(function() return v24();end)();elseif (v115== #"19(") then v116=(function() return v25();end)();end v59[v112]=(function() return v116;end)();break;end if (v114~=(1024 -(706 + 318))) then else local v125=(function() return 0;end)();while true do if ((1251 -(721 + 530))~=v125) then else v115=(function() return v21();end)();v116=(function() return nil;end)();v125=(function() return 1272 -(945 + 326) ;end)();end if (1~=v125) then else v114=(function() return 1;end)();break;end end end end break;end end end v57[ #"nil"]=(function() return v21();end)();v90=(function() return 2;end)();end if (2==v90) then v53=(function() return 4 -2 ;end)();break;end if (v90==0) then v58=(function() return v23();end)();v59=(function() return {};end)();v90=(function() return 1;end)();end end break;end end end if (v53==(0 + 0)) then local v91=(function() return 0;end)();local v92=(function() return;end)();while true do if (v91==0) then v92=(function() return 0;end)();while true do if (v92==(701 -(271 + 429))) then v56=(function() return {};end)();v57=(function() return {v54,v55,nil,v56};end)();v92=(function() return 2 + 0 ;end)();end if (v92~=(1502 -(1408 + 92))) then else v53=(function() return  #" ";end)();break;end if (v92==(1086 -(461 + 625))) then v54=(function() return {};end)();v55=(function() return {};end)();v92=(function() return 1289 -(993 + 295) ;end)();end end break;end end end end end local function v29(v60,v61,v62) local v63=v60[1 + 0 ];local v64=v60[1 + (3 -2) ];local v65=v60[3];return function(...) local v68=v63;local v69=v64;local v70=v65;local v71=v27;local v72=1172 -(418 + 753) ;local v73= -(1 + 0);local v74={};local v75={...};local v76=v12("#",...) -(1 + 0) ;local v77={};local v78={};for v87=0 + 0 ,v76 do if ((v87>=v70) or (377>2604)) then v74[v87-v70 ]=v75[v87 + (530 -(406 + 64 + 59)) ];else v78[v87]=v75[v87 + ((2240 -(381 + 89)) -(1749 + 20)) ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do local v88=0;while true do if (v88==(0 + 0)) then v80=v68[v72];v81=v80[1];v88=1;end if ((568<911) and (v88==(1323 -(1249 + 73)))) then if ((3285<4228) and (v81<=(29 + 3))) then if ((3916>3328) and (v81<=(6 + 7 + 2))) then if (v81<=7) then if ((2500<3839) and (v81<=3)) then if (v81<=(1146 -(466 + (1162 -483)))) then if (v81>(0 -0)) then v78[v80[5 -3 ]]=v62[v80[3]];else local v130=v80[1902 -(106 + 1794) ];v78[v130]=v78[v130](v13(v78,v130 + (1157 -(1074 + 82)) + 0 ,v80[1 + 2 ]));end elseif (v81==(5 -3)) then local v132=0 -0 ;local v133;local v134;while true do if ((507==507) and (v132==1)) then v78[v133 + (2 -1) ]=v134;v78[v133]=v134[v80[118 -(4 + 110) ]];break;end if ((240<=3165) and (v132==(584 -(57 + 527)))) then v133=v80[1429 -(41 + 1386) ];v134=v78[v80[(1890 -(214 + 1570)) -(17 + 86) ]];v132=1 + 0 ;end end else do return v78[v80[3 -1 ]];end end elseif (v81<=((1469 -(990 + 465)) -9)) then if (v81>(170 -(122 + 44))) then local v135=v80[5 -2 ];local v136=v78[v135];for v229=v135 + 1 ,v80[12 -8 ] do v136=v136   .. v78[v229] ;end v78[v80[2]]=v136;else local v138=v78[v80[4 + 0 ]];if v138 then v72=v72 + 1 + 0 + 0 ;else local v260=0 + 0 ;while true do if (v260==0) then v78[v80[3 -1 ]]=v138;v72=v80[68 -(30 + 35) ];break;end end end end elseif (v81>(5 + 1)) then v78[v80[1259 -(1043 + 214) ]]=v29(v69[v80[11 -8 ]],nil,v62);else local v140=v80[2];v78[v140](v78[v140 + (1213 -(323 + 889)) ]);end elseif (v81<=((29 + 0) -18)) then if (v81<=(589 -(361 + 219))) then if (v81==(328 -(53 + 267))) then local v141=0;local v142;local v143;while true do if (v141==(0 + 0)) then v142=v80[415 -(15 + 398) ];v143={};v141=(3868 -2885) -(18 + (2690 -(1668 + 58))) ;end if ((834>=805) and (v141==1)) then for v301=1, #v77 do local v302=v77[v301];for v319=0 -0 , #v302 do local v320=v302[v319];local v321=v320[1 + 0 ];local v322=v320[2 + 0 ];if (((v321==v78) and (v322>=v142)) or (3812<2316)) then v143[v322]=v321[v322];v320[1]=v143;end end end break;end end else local v144=850 -(20 + 830) ;local v145;while true do if (v144==(0 + (626 -(512 + 114)))) then v145=v80[128 -(116 + 10) ];v78[v145]=v78[v145]();break;end end end elseif (v81==(26 -16)) then local v146=v69[v80[(1 -0) + 2 ]];local v147;local v148={};v147=v10({},{__index=function(v230,v231) local v232=738 -(542 + 196) ;local v233;while true do if (v232==(0 -0)) then v233=v148[v231];return v233[1 -0 ][v233[1 + 1 ]];end end end,__newindex=function(v234,v235,v236) local v237=v148[v235];v237[1 + 0 ][v237[1 + 1 ]]=v236;end});for v239=2 -1 ,v80[9 -5 ] do v72=v72 + (1552 -(1126 + 425)) ;local v240=v68[v72];if (v240[1]==((86 + 371) -(118 + 287))) then v148[v239-(3 -2) ]={v78,v240[380 -(142 + 235) ]};else v148[v239-1 ]={v61,v240[3]};end v77[ #v77 + (1995 -(109 + 1885)) + (1469 -(1269 + 200)) ]=v148;end v78[v80[2]]=v29(v146,v147,v62);else v78[v80[979 -((1059 -506) + 424) ]]=v78[v80[5 -2 ]] -v80[4 + 0 ] ;end elseif (v81<=(13 + 0)) then if ((v81==12) or (2652<=1533)) then v72=v80[2 + 1 ];else v78[v80[1 + 1 ]]=v61[v80[2 + 1 ]];end elseif (v81>14) then local v154=0 -0 ;local v155;local v156;local v157;local v158;while true do if (v154==((817 -(98 + 717)) -1)) then v73=(v157 + v155) -((828 -(802 + 24)) -1) ;v158=0 + 0 ;v154=9 -7 ;end if (v154==2) then for v304=v155,v73 do local v305=(1298 -545) -(239 + 514) ;while true do if ((v305==(0 + 0)) or (3598<1460)) then v158=v158 + (1330 -(797 + 532)) ;v78[v304]=v156[v158];break;end end end break;end if (v154==(0 + (0 -0))) then v155=v80[1 + 1 ];v156,v157=v71(v78[v155](v78[v155 + (2 -1) ]));v154=1203 -(373 + 829) ;end end else v78[v80[(109 + 624) -(476 + 255) ]][v80[1133 -(369 + 761) ]]=v80[3 + 1 ];end elseif (v81<=(18 + 5)) then if ((v81<=(34 -15)) or (4116<1192)) then if (v81<=(32 -15)) then if (v81>(254 -(64 + 174))) then do return v78[v80[2]];end else local v161=v80[1 + 1 ];v78[v161]=v78[v161](v13(v78,v161 + ((1 + 0) -0) ,v73));end elseif (v81==(354 -(144 + 192))) then v78[v80[218 -(10 + 32 + 174) ]]=v29(v69[v80[3 + 0 ]],nil,v62);else v78[v80[(5 -3) + 0 ]]=v78[v80[2 + 1 ]] -v80[4] ;end elseif (v81<=21) then if (v81>(1524 -(363 + (3804 -2663)))) then do return v78[v80[1582 -(1183 + 397) ]]();end elseif (v78[v80[5 -3 ]]==v80[3 + 1 ]) then v72=v72 + 1 + 0 ;else v72=v80[1978 -(1913 + 62) ];end elseif ((v81>(14 + 8)) or (3377<=903)) then v78[v80[5 -3 ]]=v80[1936 -(565 + 1368) ];else v78[v80[(3 + 4) -5 ]]=v78[v80[1664 -(1477 + 184) ]];end elseif (v81<=(36 -9)) then if (v81<=(24 + 1)) then if (v81==(880 -(564 + 292))) then local v169=0 -0 ;local v170;while true do if ((3976>=439) and (v169==(0 -0))) then v170=v78[v80[308 -(244 + 60) ]];if  not v170 then v72=v72 + 1 + 0 ;else v78[v80[478 -(41 + 435) ]]=v170;v72=v80[3];end break;end end else v78[v80[1003 -(938 + 26 + 37) ]]={};end elseif ((3752==3752) and (v81>26)) then local v172=v80[2 + 0 ];local v173={};for v242=1 + 0 , #v77 do local v243=v77[v242];for v262=1125 -(936 + 189) , #v243 do local v263=v243[v262];local v264=v263[1 + 0 ];local v265=v263[1615 -(1565 + 48) ];if ((v264==v78) and (v265>=v172)) then v173[v265]=v264[v265];v263[1 + 0 ]=v173;end end end else v78[v80[1140 -(782 + 356) ]][v80[3]]=v80[(198 + 73) -(176 + 91) ];end elseif ((4046>2695) and (v81<=(75 -46))) then if (v81==(14 + 14)) then if (v78[v80[(1435 -(797 + 636)) -0 ]]==v80[1096 -(975 + 117) ]) then v72=v72 + 1 ;else v72=v80[1878 -(157 + 1718) ];end else local v176=v80[2];v78[v176]=v78[v176](v78[v176 + 1 + 0 ]);end elseif ((v81<=(106 -76)) or (3545==3197)) then local v178=0 -0 ;local v179;local v180;local v181;local v182;while true do if ((1020 -(697 + (1558 -1237)))==v178) then for v309=v179,v73 do v182=v182 + (2 -1) ;v78[v309]=v180[v182];end break;end if ((2394>373) and ((0 -0)==v178)) then v179=v80[4 -2 ];v180,v181=v71(v78[v179](v78[v179 + 1 + 0 ]));v178=1 -0 ;end if ((2 -1)==v178) then v73=(v181 + v179) -(1228 -(322 + 905)) ;v182=611 -(602 + 9) ;v178=1191 -(449 + (2359 -(1427 + 192))) ;end end elseif (v81==((313 + 590) -(826 + 46))) then v78[v80[(2202 -1253) -(245 + 702) ]]=v80[(9 + 0) -6 ];else do return;end end elseif (v81<=49) then if (v81<=(13 + 13 + 14)) then if ((4155<=4232) and (v81<=(1934 -(260 + 1638)))) then if (v81<=(474 -(382 + 58))) then if (v81>33) then local v183=v80[6 -4 ];v78[v183]=v78[v183](v78[v183 + 1 + 0 ]);elseif (v78[v80[3 -1 ]] or (3581==3473)) then v72=v72 + (2 -1) ;else v72=v80[1208 -(902 + 303) ];end elseif (v81==(76 -41)) then local v185=0 -0 ;local v186;while true do if (v185==(0 + 0)) then v186=v80[1692 -(1121 + 569) ];v78[v186](v13(v78,v186 + 1 ,v80[217 -(22 + 192) ]));break;end end else v78[v80[328 -(192 + 134) ]]=v61[v80[686 -(483 + 200) ]];end elseif (v81<=(1501 -(1404 + 59))) then if (v81==(101 -64)) then local v189=v80[2 -0 ];do return v13(v78,v189,v73);end else local v190=v69[v80[768 -(468 + 297) ]];local v191;local v192={};v191=v10({},{__index=function(v244,v245) local v246=562 -(334 + 228) ;local v247;while true do if (v246==(0 -0)) then v247=v192[v245];return v247[1][v247[2]];end end end,__newindex=function(v248,v249,v250) local v251=v192[v249];v251[2 -1 ][v251[2 -0 ]]=v250;end});for v253=1 + 0 ,v80[240 -(141 + 95) ] do local v254=0 + 0 + 0 ;local v255;while true do if (v254==1) then if (v255[2 -1 ]==(124 -72)) then v192[v253-(1 + 0 + 0) ]={v78,v255[3]};else v192[v253-(1 + 0) ]={v61,v255[4 -1 ]};end v77[ #v77 + 1 ]=v192;break;end if ((4995>3348) and ((0 + 0)==v254)) then v72=v72 + 1 ;v255=v68[v72];v254=1;end end end v78[v80[165 -(92 + 71) ]]=v29(v190,v191,v62);end elseif (v81>(20 + 19)) then v78[v80[2 -0 ]][v80[768 -(574 + 191) ]]=v78[v80[4 + 0 ]];else v78[v80[4 -2 ]]=v78[v80[2 + 1 ]][v80[853 -(254 + 595) ]];end elseif ((v81<=(170 -(55 + 71))) or (754>3724)) then if ((217>=57) and (v81<=(54 -12))) then if (v81==(1831 -(573 + 1217))) then local v198=0 -0 ;local v199;while true do if (v198==0) then v199=v80[1 + 1 ];v78[v199]=v78[v199](v13(v78,v199 + (1 -0) ,v73));break;end end else local v200=0;local v201;while true do if ((0==v200) or (2070>=4037)) then v201=v80[941 -((2729 -2015) + 225) ];do return v13(v78,v201,v201 + v80[8 -(556 -(83 + 468)) ] );end break;end end end elseif ((2705==2705) and (v81==43)) then v61[v80[3]]=v78[v80[2 -0 ]];else v61[v80[1 + 2 ]]=v78[v80[2 -(1806 -(1202 + 604)) ]];end elseif (v81<=((3977 -3125) -(118 + 688))) then if (v81>(93 -(25 + 23))) then v78[v80[1 + 1 ]][v80[1889 -(927 + 959) ]]=v78[v80[13 -(14 -5) ]];else local v208=732 -(16 + 716) ;local v209;while true do if ((61==61) and (v208==(0 -0))) then v209=v80[99 -(11 + (238 -152)) ];v78[v209]=v78[v209](v13(v78,v209 + (2 -1) ,v80[288 -(175 + 110) ]));break;end end end elseif ((v81<=47) or (699>=1296)) then local v210=v80[4 -2 ];do return v13(v78,v210,v73);end elseif ((v81>48) or (1783>=3616)) then local v270=0 -0 ;local v271;local v272;while true do if (v270==(1797 -(503 + 1293))) then v78[v271 + (2 -1) ]=v272;v78[v271]=v272[v80[3 + 1 ]];break;end if ((v270==0) or (3913>4527)) then v271=v80[1063 -(810 + 251) ];v272=v78[v80[3 + 0 ]];v270=1;end end else for v297=v80[327 -(45 + 280) ],v80[1 + 2 ] do v78[v297]=nil;end end elseif (v81<=(52 + 5)) then if (v81<=((566 + 20) -(43 + 490))) then if (v81<=(45 + 6)) then if (v81>(783 -(711 + 22))) then v72=v80[11 -8 ];else v78[v80[861 -(240 + 619) ]]=v62[v80[1 + 2 ]];end elseif (v81>(81 -29)) then do return;end else v78[v80[1 + 1 ]]=v78[v80[(638 + 1109) -(1344 + 400) ]];end elseif (v81<=(460 -(255 + 150))) then if (v81>(43 + 11)) then v78[v80[2]]=v78[v80[2 + 1 ]][v80[4]];else do return v78[v80[8 -6 ]]();end end elseif ((4376>817) and (v81==((100 + 80) -(22 + 102)))) then local v218=1739 -(404 + 1335) ;local v219;while true do if (v218==(406 -((338 -155) + 223))) then v219=v80[2 -0 ];v78[v219](v78[v219 + 1 ]);break;end end else local v220=v78[v80[3 + 1 ]];if  not v220 then v72=v72 + 1 + 0 ;else local v273=337 -(10 + 327) ;while true do if (v273==(0 + 0)) then v78[v80[340 -(118 + 220) ]]=v220;v72=v80[(1912 -(340 + 1571)) + 2 ];break;end end end end elseif ((4861>824) and (v81<=(510 -(108 + 341)))) then if ((v81<=(11 + 16 + (1804 -(1733 + 39)))) or (1383>=2131)) then if (v81>((673 -428) -187)) then if  not v78[v80[1495 -(711 + 782) ]] then v72=v72 + 1 ;else v72=v80[5 -(1036 -(125 + 909)) ];end else local v221=v78[v80[473 -(270 + 199) ]];if v221 then v72=v72 + 1 + 0 ;else local v275=0;while true do if (v275==(1819 -(580 + 1239))) then v78[v80[5 -3 ]]=v221;v72=v80[3 + 0 ];break;end end end end elseif ((v81>(3 + 57)) or (1876>=2541)) then local v222=v80[2 + 1 ];local v223=v78[v222];for v256=v222 + 1 ,v80[9 -5 ] do v223=v223   .. v78[v256] ;end v78[v80[2 + 0 ]]=v223;else local v225=v80[1169 -(645 + 522) ];v78[v225](v13(v78,v225 + (1791 -(1010 + 780)) ,v80[3 + 0 ]));end elseif (v81<=(300 -(2185 -(1096 + 852)))) then if ((1782<=3772) and (v81==(181 -119))) then for v257=v80[2],v80[1839 -(1045 + 791) ] do v78[v257]=nil;end else local v226=v80[2];v78[v226]=v78[v226]();end elseif ((v81<=(161 -97)) or (4700<813)) then v78[v80[2 -0 ]]={};elseif (v81>(570 -(351 + 154))) then if ((3199<4050) and v78[v80[2]]) then v72=v72 + (1575 -(1281 + 293)) ;else v72=v80[269 -(28 + 238) ];end elseif  not v78[v80[4 -2 ]] then v72=v72 + (1560 -(1381 + 178)) ;else v72=v80[2 + 1 + 0 ];end v72=v72 + 1 + 0 ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
